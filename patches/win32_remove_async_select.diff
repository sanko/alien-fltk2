--- fltk-2.0.x-r8323.orig/src/win32/run.cxx	Wed Jan 26 10:16:17 2011
+++ fltk-2.0.x-r8323/src/win32/run.cxx	Wed Feb 02 16:05:01 2011
@@ -87,7 +87,2 @@
 
-//
-// USE_ASYNC_SELECT - define it non-zero if you have WSAAsyncSelect()...
-//
-#define USE_ASYNC_SELECT 1
-
 // USE_IMM - define it non-zero if you want Input Method
@@ -281,5 +276,4 @@
 
-#ifndef USE_ASYNC_SELECT
 static fd_set fdsets[3];
-#endif // !USE_ASYNC_SELECT
+static int maxfd = 0;
 
@@ -310,10 +304,2 @@
   fd[i].arg = v;
-
-#ifdef USE_ASYNC_SELECT
-  int mask = 0;
-  if (events & POLLIN) mask |= FD_READ;
-  if (events & POLLOUT) mask |= FD_WRITE;
-  if (events & POLLERR) mask |= FD_CLOSE;
-  WSAAsyncSelect(n, 0/*window*/, WM_FLSELECT, mask);
-#else
   if (events & POLLIN) FD_SET(n, &fdsets[0]);
@@ -321,5 +307,4 @@
   if (events & POLLERR) FD_SET(n, &fdsets[2]);
-#endif // USE_ASYNC_SELECT
+  if (n > maxfd) maxfd = n;
 }
-
 void fltk::add_fd(int fd, FileHandler cb, void* v) {
@@ -343,6 +328,2 @@
   nfds = j;
-
-#ifdef USE_ASYNC_SELECT
-  WSAAsyncSelect(n, 0, 0, 0);
-#else
   if (events & POLLIN) FD_CLR(unsigned(n), &fdsets[0]);
@@ -350,3 +331,2 @@
   if (events & POLLERR) FD_CLR(unsigned(n), &fdsets[2]);
-#endif // USE_ASYNC_SELECT
 }
@@ -368,5 +348,3 @@
   if (__PeekMessage(&msg, NULL, 0, 0, PM_NOREMOVE)) return 1;
-#ifdef USE_ASYNC_SELECT
-  return 0;
-#else
+  if (!nfds) return 0;
   timeval t;
@@ -375,7 +353,4 @@
   fd_set fdt[3];
-  fdt[0] = fdsets[0];
-  fdt[1] = fdsets[1];
-  fdt[2] = fdsets[2];
+  memcpy(fdt, fdsets, sizeof fdt);
   return ::select(0,&fdt[0],&fdt[1],&fdt[2],&t);
-#endif // USE_ASYNC_SELECT
 }
@@ -398,4 +373,11 @@
 static inline int fl_wait(double time_to_wait) {
+  int have_message = 0;
 
-#ifndef USE_ASYNC_SELECT
+  // idle processing
+  static char in_idle;
+  if (fltk::idle && !in_idle) {
+    in_idle = 1;
+    fltk::idle();
+    in_idle = 0;
+  }
   if (nfds) {
@@ -408,7 +390,4 @@
     fd_set fdt[3];
-    fdt[0] = fdsets[0];
-    fdt[1] = fdsets[1];
-    fdt[2] = fdsets[2];
-
-    if (::select(0,&fdt[0],&fdt[1],&fdt[2],&t)) {
+    memcpy(fdt, fdsets, sizeof fdt); // one shot faster fdt init
+    if (::select(maxfd+1,&fdt[0],&fdt[1],&fdt[2],&t)) {
       // We got something - do the callback!
@@ -428,4 +407,2 @@
   }
-#endif // USE_ASYNC_SELECT
-
   if (!fl_ready()) {
@@ -443,13 +420,3 @@
     ret++;
-#ifdef USE_ASYNC_SELECT
-    if (msg.message == WM_FLSELECT) {
-      // Got notification for socket
-      for (int i = 0; i < nfds; i ++)
-	if (fd[i].fd == (int)msg.wParam) {
-	  (fd[i].cb)(fd[i].fd, fd[i].arg);
-	  break;
-	}
-      // looks like it is best to do the dispatch-message anyway:
-    } else
-#endif
+
     if (msg.message == WM_MAKEWAITRETURN) {
@@ -469,2 +436,3 @@
   }
+  fltk::flush();
 
